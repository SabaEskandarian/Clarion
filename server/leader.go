package main

import (
    "log"
    "crypto/tls"
    "net"
    //"os"
    "time"
    //"unsafe"
    //"io"
    //"crypto/rand"
    //"golang.org/x/crypto/nacl/box"
    //"sync/atomic"
    //"strconv"
    
    //"mycrypto" //my crypto in crypto.go, the rest generated by Goff https://github.com/ConsenSys/goff

)

func leader(numServers, msgBlocks, batchSize int) {
    
    log.Println("This server is the leader")
    
    //setup
    cer, err := tls.LoadX509KeyPair("server.crt", "server.key")
    if err != nil {
        log.Println(err)
        return
    }
    config := &tls.Config{Certificates: []tls.Certificate{cer}}
    port := ":4443"
    ln, err := tls.Listen("tcp", port, config)  
    if err != nil {
        log.Println(err)
        return
    }
    defer ln.Close()
    
    //first connection from Aux server
    auxConn, err := ln.Accept()
    if err != nil {
        log.Println(err)
        return
    }
    auxConn.SetDeadline(time.Time{})
        
    //holds connections to the other shuffle servers
    conns := make([]net.Conn, (numServers-1))

    for i := 0; i < numServers - 1; i++ {
        conns[i], err = ln.Accept()
        if err != nil {
            log.Println(err)
            return
        }
        conns[i].SetDeadline(time.Time{})
    }
    
    //main server behavior below
    
    //TODO: data structure for holding batch of messages?
    
    for {
        //client connection receiving phase
        //NOTE: server is currently single-threaded. 
        //Throughput could be significantly increased by making the servers handle multiple client requests concurrently
        
        
        msgCount:= 0
        for msgCount < batchSize {
            //TODO: handle connections from client, pass on boxes
                        
        }
        
        //processing phase
        //NOTE: in reality, the blind verification stuff could be done as messages arrive
        //this would speed up the processing time, esp. if the server were multithreaded
        //but I'm handling everything for a batch at once so I can report performance for processing a batch
        
        //TODO: get beaver triples and translations from aux server, pass on boxes        
        
        //TODO: blind MAC verification, shuffle, real MAC verification
    }
}
